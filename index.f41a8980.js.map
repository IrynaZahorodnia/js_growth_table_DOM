{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,UAC/B,EAAY,SAAS,aAAa,CAAC,eACnC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAe,SAAS,aAAa,CAAC,kBAI5C,EAAU,gBAAgB,CAAC,QAAS,WAClC,IAAM,EAAO,EAAM,IAAI,CAEvB,IAAI,CAAA,EAAK,MAAM,EALA,EAKI,GAInB,IAAM,EAAW,CAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA,GAEnC,EAAM,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,GACxB,EAAU,eAAe,CAAC,YAC1B,EAAU,QAAQ,CAAG,AAbN,KAaM,EAAK,MAAM,CAClC,GAEA,EAAU,gBAAgB,CAAC,QAAS,WAClC,IAAM,EAAO,EAAM,IAAI,CAEvB,CAAI,CAAC,EAAE,CAAC,MAAM,GACd,EAAU,eAAe,CAAC,YAC1B,EAAU,QAAQ,CAAG,AAtBN,IAsBM,EAAK,MAAM,AAClC,GAEA,EAAa,gBAAgB,CAAC,QAAS,WACrC,IAAM,EAAO,EAAM,IAAI,CACjB,EAAU,EAAM,IAAI,CAAC,EAAE,CAAC,QAAQ,AAElC,CAAA,EAAQ,MAAM,EA5BH,KAgCd,EAAG,GAAM,OAAO,CAAC,SAAC,CAAlB,EACC,IAAM,EAAc,EAAI,iBAAiB,CAAC,SAAS,GAEnD,EAAI,MAAM,CAAC,EACb,GACA,EAAa,eAAe,CAAC,YAC7B,EAAa,QAAQ,CAAG,AAtCT,KAsCS,EAAQ,MAAM,CACxC,GAEA,EAAa,gBAAgB,CAAC,QAAS,WACrC,IAAM,EAAO,EAAM,IAAI,CACjB,EAAU,EAAM,IAAI,CAAC,EAAE,CAAC,QAAQ,CAErC,EAAG,GAAM,OAAO,CAAC,SAAC,CAAlB,EACC,EAAI,iBAAiB,CAAC,MAAM,EAC9B,GACA,EAAa,eAAe,CAAC,YAC7B,EAAa,QAAQ,CAAG,AAlDT,IAkDS,EAAQ,MAAM,AACxC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\".field\");\nvar appendRow = document.querySelector(\".append-row\");\nvar removeRow = document.querySelector(\".remove-row\");\nvar appendColumn = document.querySelector(\".append-column\");\nvar removeColumn = document.querySelector(\".remove-column\");\nvar minCount = 2;\nvar maxCount = 10;\nappendRow.addEventListener(\"click\", function() {\n    var rows = table.rows;\n    if (rows.length >= maxCount) return;\n    var extraRow = rows[0].cloneNode(true);\n    table.tBodies[0].append(extraRow);\n    removeRow.removeAttribute(\"disabled\");\n    appendRow.disabled = rows.length === maxCount;\n});\nremoveRow.addEventListener(\"click\", function() {\n    var rows = table.rows;\n    rows[0].remove();\n    appendRow.removeAttribute(\"disabled\");\n    removeRow.disabled = rows.length === minCount;\n});\nappendColumn.addEventListener(\"click\", function() {\n    var rows = table.rows;\n    var columns = table.rows[0].children;\n    if (columns.length >= maxCount) return;\n    _to_consumable_array(rows).forEach(function(row) {\n        var extraColumn = row.firstElementChild.cloneNode();\n        row.append(extraColumn);\n    });\n    removeColumn.removeAttribute(\"disabled\");\n    appendColumn.disabled = columns.length === maxCount;\n});\nremoveColumn.addEventListener(\"click\", function() {\n    var rows = table.rows;\n    var columns = table.rows[0].children;\n    _to_consumable_array(rows).forEach(function(row) {\n        row.firstElementChild.remove();\n    });\n    appendColumn.removeAttribute(\"disabled\");\n    removeColumn.disabled = columns.length === minCount;\n});\n\n//# sourceMappingURL=index.f41a8980.js.map\n","'use strict';\n\nconst table = document.querySelector('.field');\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst appendColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\nconst minCount = 2;\nconst maxCount = 10;\n\nappendRow.addEventListener('click', () => {\n  const rows = table.rows;\n\n  if (rows.length >= maxCount) {\n    return;\n  }\n\n  const extraRow = rows[0].cloneNode(true);\n\n  table.tBodies[0].append(extraRow);\n  removeRow.removeAttribute('disabled');\n  appendRow.disabled = rows.length === maxCount;\n});\n\nremoveRow.addEventListener('click', () => {\n  const rows = table.rows;\n\n  rows[0].remove();\n  appendRow.removeAttribute('disabled');\n  removeRow.disabled = rows.length === minCount;\n});\n\nappendColumn.addEventListener('click', () => {\n  const rows = table.rows;\n  const columns = table.rows[0].children;\n\n  if (columns.length >= maxCount) {\n    return;\n  }\n\n  [...rows].forEach((row) => {\n    const extraColumn = row.firstElementChild.cloneNode();\n\n    row.append(extraColumn);\n  });\n  removeColumn.removeAttribute('disabled');\n  appendColumn.disabled = columns.length === maxCount;\n});\n\nremoveColumn.addEventListener('click', () => {\n  const rows = table.rows;\n  const columns = table.rows[0].children;\n\n  [...rows].forEach((row) => {\n    row.firstElementChild.remove();\n  });\n  appendColumn.removeAttribute('disabled');\n  removeColumn.disabled = columns.length === minCount;\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","table","document","querySelector","appendRow","removeRow","appendColumn","removeColumn","addEventListener","rows","extraRow","cloneNode","tBodies","append","removeAttribute","disabled","remove","columns","children","forEach","row","extraColumn","firstElementChild"],"version":3,"file":"index.f41a8980.js.map"}